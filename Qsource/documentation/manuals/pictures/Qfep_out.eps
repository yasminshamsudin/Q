%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Q Manual)
%%Version: 1 2
%%Creator: (Acrobat PDFMaker 5.0 for Word)
%%CreationDate: (D:20030508172609+02'00')
%%For: (John Marelius)
%%DocumentData: Clean7Bit
%%BoundingBox: 76 164 447 505
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
76 164 moveto 447 164 lineto 447 505 lineto 76 505 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRoman,BoldItalic
[/N139/TimesNewRoman,BoldItalic 1 TZ
%%IncludeResource Courier
[/N138/Courier 1 TZ
%%IncludeResource TimesNewRoman
[/N3049/TimesNewRoman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
76 164 372 341 rectclip
%%BeginResource: font LMEGJM+SymbolMT
11 dict begin
/FontName /LMEGJM+SymbolMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 192 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b19039b05d30ed4559c5ecf2da4ace2ab
53168b5c58eb3d8c199cf05ae7> ND 
/g79 
<10bf31705117747dbada4170e449d77601f8bd7d217a7113dfe1b796a5e0
5378f54375cdef14895af2641e4d47f031fa80cf723e9a66f3c7b8d788f5
48ad3ed92fd1104330388dd6fa8991ae3f0fd72c689628085077ea364bd4
22023ba366e97469042e1acf5789ad406ebf63d244ef5a29dcaa971addc8
67e1abf79a9b7f40a30d38f160e757bfbd18e99153c73777ac9e170b59b8
3fbcb440b0ea17e725c8b8> ND 
/g72 
<10bf31705d646aa7ff62a135113153bfc1301e38a62bd42355e80570774b
8ddd81a2e30c01184caaa78d0c7e9edc2b4bd6d1427148687e24ed207d7c
975ac82650d22a97dbf4cda81d6502b25adec63a92e05247858c5e90bce9
0b72c18839a78672268e7639145fe24eb3a60f1bb44e04c71cd5401cbf8e
7ec23b5a77318b186586c12609cfbd08f7f8d2125c0b62d165b4fc38d463
c8b4ad8bb8359921d7ffc597d0678a7dab8a1fa2b8314c58e3846c7050e4
ff529ffca13e0f79ba16e92538e481e76a53ae2bb0ac7bb0b564a66b29b2
381ae580db01b2d8b0ac728f328e8b6e7b3fafff78c77dec11aabbf2c618
9e862768e7b4760c2ccda118a30c77bd4e85673f9b0237f3aae6ca8fc82e
39e6460a0265d2b135a9344c3bec7df3904f05a9ba86b1a8> ND 
/g39 
<10bf31706ae00d818da0966dfcd059153b1d9952674da3b71f9ea069fb39
7135151a2a029fb2a661c02bf6611ef017> ND 
/g32 
<10bf31706fd83f377bda10399f5cf379a108083b36bf6dc10d6bebb6f4d8
24ebcb90b326f0> ND 
/g16 
<10bf31706fd83f377b709fd9b9194905c57c3b408be697> ND 
/g152 
<10bf3170209b218f5bd385798fe81144302b2942465f5a76954c1c581a13
57dfa7c4052464e4db89416d1f710f568e190bc9992dc93edc4c4bb2fc45
bbea274bc8846e8faa75> ND 
/g166 
<10bf31705244ec999406659899efdd0074fcec947fdb8d5f0b0e07ad6a3e
d7b7c3bdc9bdfaffa878cc8f473df6980e00577d34cb4c150a53a7217364
899a0bf782a8be10cb18156e2b08def54c8819a4724896b34dcee877fb79
3820ab217264d354> ND 
/g54 
<10bf317054a256c18614592a5d8a5fce192d49085ea19e0734865a6073a2
c7d32fa091453818a19dbd85711dd5e13e754e007f0a8e9d84771e4b08f1
cad4052fb2acce89e4dcdd23eec1a617651d0060cb0517496d3e1f7ae441
933a> ND 
/g68 
<10bf317046e98b07a55059c296002221a6bcec28633df7a787e1d7463c85
ebb8b48537717f23eb91164c991c9e37d75745a7d248b244db4c115534d3
bea9f059af807d0184f76d84408472e11a0332a8f562d95d542206bbf82e
2b72c35ffe861c8367794dc74f39d312092139882c80ba7bbc5162b5182b
b39c133498bd7b2ebe92a9ec6b04c5fd8bd5538e778742f6ab0c09d03c58
ccb5f9da31294ff46d754db787e82e56a4652a394025fdad7d27a0bca774
f4950d6054a8c2fc78f338f870fe4b9928ebd9aa44dd66f8d53608295298
b5a6d6f6f999f0ef1e6459> ND 
/g122 
<10bf31706fd83f377bd508bdd7b946122ae4930b3f122e74824f59b4eaec
ce75a13b9329735197e046018ccdd6365ef05dc8096a4c12278079631bbf
4178f48d73b29702d2bae108a2> ND 
/g80 
<10bf31703a9b8a5acb6cc34e29a78b3543a02f44016a183fa96ee22a4672
260280f37155abc7c5dd97ad1eed691514dd9f216a99d6f5b4ee5ea0e3df
6c86a85cb1432d35d8f83e1dd0e44a84390fd2f3a1bc7a09f154c36bf455
f4e857f45dd2fe43a0a4ae4c94bb93a23f7c67d5a71adfb73c796b01d659
91243f757228ab435b3e5d2cc3be58b1b0f54c63f9a199a520853094fb2c
45d796cbff56c5a93e203b5825ac6ec7293ac1040f3ebb56f6bab9aba62d
aea3cca824d247bf924306d142b5e90d84b404bcf2de9e6844d2f6527427
e9e9b39dc18696fc835d944e> ND 
/g75 
<10bf31705374ef3d198a702827158e50a854bdcef95d3ea02bf4915c2139
6ac2d5d13852962cd86476dc8ffb692a21455315933c66ea947abc750d99
46d0d1ceb18c1289c08feefe346a5a6ed0439768e8630da7fae27133c697
fd8416ffc7ee5a680a95fac8e5615b374d9d49a9fcb72d4a017824a70e01
38f1f772339ce0b2f16a3d71d3c52e39fe49bd7237b2ca79ad7dac6b6ba9
ac2e1c8783fd00e50961f45996381ecda5832c8d0fae8171f8da0873acbd
07d31d4d68> ND 
/g3 
<10bf317079c757bf91> ND 
/g162 
<10bf31705995e71decb7bc3108963c9b4b89bc7772e62cb6b1cefb301161
40b39128d55dcd5b07> ND 
/g178 
<10bf31705b0860af48c4937ab7489e5b2bd791dca495772bcd60af34b180
8102d4019eb02b3f> ND 
/g11 
<10bf317046e70250e8d527259f4c307580dc08116bc06e9f96a64f44ff03
09e51c5ea6dfefd1d2525899c5cf1e2178dcfbc466874bc4edf88972039b
ea9a3326b876afc783c6771c9a542c485d5f02f3b5fee855a23e89dd> ND 
/g12 
<10bf3170537b448baa459ff272c2bef108ee4544fe19b6b796a088175ad5
e748e746775920c5891f280f3a0eb26ad82fa056febc37e16ba965a4aebf
be75c7a3f402605f473a109989cb29c2670909c584b4ddd3f9b4a80b> ND 
/g14 
<10bf31706fd83f377b719e4650f772ad2ecbd6adad4d5d3258c8ec0c426d
3d74d585c421ad7f3d1f372320e9a73e5f> ND 
/g43 
<10bf31706c4dc75bdf1f1d9d97d2fdd19b744bb36aabdbace1d2980b7211
039d8d659243e7f1fa4b90c4fc11cb131ccc86d5ae44b9a11accedcf8bdf
d54b7222577be28c11d374055ee24fdeabaaed2b9f95cf925ce09afb6931
71e3e36f6df8784c93c9148b6ae4f7ae4788831dc373565b2734b8d25811
c67fb8a61b8b2dd63d9ac4ebb959e4777454d449f61c5fa881ca2b61fcc5
4f84178d316033540f908aa3cf09b9057d0a49347b68296483d595b355ac
a2adf054a9b5c569fba2db24bdb95c182ec0a56f301d746b7fd54b46b0> ND 
/g120 
<10bf31704d4d8fd83e9e9a3fc7fb72aca2e446f2b27e28812bc3369ad44e
dd6951ce8f5ebb8723f7b7ee2c85129efa2236ac11da28ce7307d38f127a
99346cd1a6e3e7be6def2a> ND 
/g69 
<10bf31703475a254153486d007786120d454c5b568e18fe488350cac58dd
842ea95526ff48fcc70c1580d89db99967cf37d4e3afb19b09b3afa009d4
99409e1bfeb2cfd690f2a6599fdd07a86b0db999f2b9087ce460b339dbeb
4258328d86460afbd6a5a7f62343023dbb98d1bd6c375854baf47ae8be04
06183066a0717f5643027712af9803092f76c8090dda70b0b9c3c2ece84b
3f7df57e25af1d58518d734f3db8be99c4c504062020a50db17230a7251f
18093801bcd146df18cd953521d0c9396ed0517b5db992953466e5acd84e
1a49dd60fae5ca44007756cf4b015589a6c0edec914be7030f851ecc9617
bfc8a0537ef8408bf78af68230dadbd8883c41fc> ND 
/g84 
<10bf3170448be208f8bb1425c79e9b8fe2f51755eb5fa2ee5e89b120dda0
1d3be95626be97ab4d37c9b2bf23414f0800d829129aa43108035645ff92
26cfb91d394c5f79db7a467d98fb95d40e99834ad494ad4881a174ef12d4
f8df671f259be7d349562d3cb3ac3f03aa100eb2d9b140c80d08480deb57
8d4459d08784a57bfef51276776270aad6e1a45e354df1abdc2e78edf6a4
2d80a8a5ffa4b649e2df5c8131a26fb8229e748d3c8ed2e108ed1bfd4ef4
482eb42ccd8e2fe6333cf44ed584> ND 
/g77 
<10bf31705fc1bc57ad20d41d0d9067c140530b74d1021e2bf865bc14d7b1
3d344a4a2b9ad0dd2071a1442df1fe9dc02bfc5c4270f37ad057e7bf6623
7047d203d400dd78aca5f0ebbb44a840efa72849f9e9d197a297fb9c455d
6c47119f6702694306dd3a480ba57c18fcc02e8e62c66f9f3233758fee64
fe347765c800b4928a4c47bf1d115a05a38312dc761a355b87d2e6032501
742de683b19c38e715e1859e58889f21be64fa4baca41d3bdbae561cf948
76d2aa1644e53dfded832fe8e14deb4377e4de67b204c481f5e712b0977a
d8aadd7b55c25a82> ND 
/g91 
<10bf317045ba8169748036e2a06db6206e5d1f9cfcd15eb33ea65434785e
d73b9cf39e6c6cc71a785b3dcf992d346e4d40250379742655b200e13bad
4e33c070e446650b2aada8ec9f0c3a40ed2ef73ba7b5e14142cf400a200f
233e947152d74018e7acb9cba24591e61f0f22d78d7e465d6955e2134334
763067e9856e1ec3ed98b2436b54221cadd83bb37d6b2bf7994f0b03f6c8
3fdd843c38ee12a274cf1bb25dd0b958624e6ef9b2e99f04e4375a96d678
ae2bef71c60aa17ab499088bafe476a8c34ba6272597f923e7c486b32046
0233aec9dca528498ca5e98720a3df5ac9b278260f27c6cc38c36cd54eb4
a8f1b1a43c9dcddedabbb3f61140b8fe997d36aec8b6d6c669d2fbd2de2a
490cfe93ac61341c1b702b056d44b201bb76a32d6c665ca54d397e83b112
081460a65f0bd0d851dd949805e666f5da4b5d0cee8b56209d0d4c49dca4
01000eeb4447e1ea59ce4447bcbe366b4ef27f9ab4e3d4496d843c16915a
e2dc08debde1ad803d981421aa5589e65f12c38f4067d3b241c74a4f744c
eb6db43e> ND 
/g83 
<10bf317054a20b5fcc1fb631e75e6e035d680bc3103f22b10fe1e0236eb8
c1091b8d2ffe2baa27bacd8d8733d996b6a269962b895e80ae3e7fa9b33d
098df062d5e72eb3817502ae5622f5de26d8efe882e6e2d0fdb13a8c7755
3be00a339bff8cc5877a243533336d733d5d2b2cb66238d1ff026cb328b3
6bdb42db5ce1e0c4234fdd4b00ae86ba1799176d5e928e02eef59fdd19df
f8d76ca216d6d13821e2f75c3d1b115b5240697145d4138b1cb9e5eb8408
941dfa5f2afc3f3d21> ND 
/g71 
<10bf31705fc1d1445509b7f2983579b32a679140650c7b7138f355713c56
4a1eba97a86aa88a223a3cf268cb70654fc484645ec4a0cc65bd63e7c32f
4c004d0cb46b8187a122185079ba13950bc7a5de9612f117b7d55ba54d26
61f6762bf89052aa973bb108a07da01bbbb2d7604c039f73e9775dd0cca6
0cb7b2423e4d4b8a31e4b8ae8a3a970e24d578e3f825ce879883e2f01e1a
889e807277f6c2e38adb65b5c2f6d98cb6507206f7c7546522f3e71fd477
b15095f1f510a4f9d0a7650675587c84d40e3e2c55d10a4c73b8e0776805
9f5f6c0a41c2441437171cb382c4b19b90b8daeb34febb9d65ff3877b240
5589bf006acf319aeeb79bc85f1af3322e64dee55d7b4891> ND 
/g167 
<10bf317046e8a63857d6f8526d437896a72f3c22b349423a2f5bc76a59df
f9d933bf0b0245a1fab92b7091e63ef24c5191b7ae0ec727a9f599aebb35
09eaff9f7646da764677a79801> ND 
/g169 
<10bf317046e8a63814d4e2448cad69cbf9074829428d27e6ebe93a7bf775
a361c407ad2b0a1e2d1a195d6832394b86f4becf48ff8f75265894b4321d
838c964f7407> ND 
/g168 
<10bf317046e8a638571629f9645ca50bf751173098bf2fe2> ND 
/g183 
<10bf3170a4244d8e3c084802013e7931a002497602d40042c6f70aefb706
35df92e99a91ea7eba41aab6c00ab25b98e317f1e6b5e02e008cd6a3a065
bb03bec13b1977a2> ND 
/g185 
<10bf3170a4244d8e3317939bd24d45569b85ed381ab689f8a11cffc35627
6a33de696bb95ac6bff23b1fc6ec514261b7892614183f19a3304dce5d1d
0fa47c2023985d5e19a8fa4d67840e> ND 
/g184 
<10bf3170051c06afb1803e6c5ce57e39c47a97c4dc9b67e7b6> ND 
/g100 
<10bf31705ac97acbf3cbc6040713b402e1b945c44406375d2ed03e095321
735098299a3770cece184331df325648ade38290824a9844> ND 
/g116 
<10bf31705ac97acb879d7825950ab38b39a4d52ca389700b17c8ecf72eff
4ba25893f1674dabb6cadcd140d3ce1a238f1797ad611c6f7b5fa1> ND 
/g113 
<10bf31704faa0512070161cf3752b1abdab5818b21e4ee2f1ee7a642c0cd
5e98e2ea2ab217fd6f5771681b1512a7d2c773bf289c55edbb286c45654c
ebf429e27ffb0884c41a754a2cb399ff5dc2429e4c84d72d5242aabd3148
de4d8124296f435930b54fa2e287119790a7f906ce4fb992692c185c2ee7
62d5db516ef67b9bdb667861> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/LMEGJM+SymbolMT findfont /Encoding get
dup 0 /g0 put
dup 33 /g79 put
dup 34 /g72 put
dup 35 /g39 put
dup 36 /g32 put
dup 37 /g16 put
dup 38 /g152 put
dup 39 /g166 put
dup 40 /g54 put
dup 41 /g68 put
dup 42 /g122 put
dup 43 /g80 put
dup 44 /g75 put
dup 45 /g3 put
dup 46 /g162 put
dup 47 /g178 put
dup 48 /g11 put
dup 49 /g12 put
dup 50 /g14 put
dup 51 /g43 put
dup 52 /g120 put
dup 53 /g69 put
dup 54 /g84 put
dup 55 /g77 put
dup 56 /g91 put
dup 57 /g83 put
dup 58 /g71 put
dup 59 /g167 put
dup 60 /g169 put
dup 61 /g168 put
dup 62 /g183 put
dup 63 /g185 put
dup 64 /g184 put
dup 65 /g100 put
dup 66 /g116 put
dup 67 /g113 put
pop
%%EndResource
[/N110/LMEGJM+SymbolMT -1 TZ
false setSA
0 0 0 setrgbcolor
92.16 492.2 m
/N138 9 Tf
(...file opened, and lambdas: md_00.ene   0.00 1.00 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 501.14 0.720001 -0.720001 re
f
n
81.9 501.14 360.78 -0.720001 re
f
n
441.96 501.14 0.720001 -0.720001 re
f
n
81.9 500.42 0.720001 -9.96002 re
f
n
441.96 500.42 0.720001 -9.96002 re
f
92.16 483.2 m
( Number of points:         1000 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 490.46 0.720001 -9 re
f
n
441.96 490.46 0.720001 -9 re
f
92.16 474.2 m
(state   EQtot   EQbond  EQang   EQtor   EQimp   EQel    EQvdW )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 481.46 0.720001 -9 re
f
n
441.96 481.46 0.720001 -9 re
f
92.16 465.2 m
(-------------------------------------------------------------)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 472.46 0.720001 -9 re
f
n
441.96 472.46 0.720001 -9 re
f
92.16 456.2 m
(   1 -1087.71 -578.19    7.68    0.63    0.00 -541.46   22.70 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 463.46 0.720001 -9 re
f
n
441.96 463.46 0.720001 -9 re
f
92.16 447.2 m
(   2 -1145.21 -586.25   31.48    1.16    0.00 -603.21   10.68 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 454.46 0.720001 -9 re
f
n
441.96 454.46 0.720001 -9 re
f
n
81.9 445.46 0.720001 -9 re
f
n
441.96 445.46 0.720001 -9 re
f
92.16 429.2 m
(state   Eel_qq  EvdW_qq Eel_qp  EvdW_qp Eel_qw  EvdW_qw Eqrstr )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 436.46 0.720001 -9 re
f
n
441.96 436.46 0.720001 -9 re
f
92.16 420.2 m
(--------------------------------------------------------------)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 427.46 0.720001 -9 re
f
n
441.96 427.46 0.720001 -9 re
f
92.16 411.2 m
(   1   112.02    0.57  -18.78   -1.97 -634.70   24.10    0.00 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 418.46 0.720001 -9 re
f
n
441.96 418.46 0.720001 -9 re
f
92.16 402.2 m
(   2     0.00   -0.30   -5.32   -2.51 -597.89   13.50    0.00 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 409.46 0.720001 -9 re
f
n
441.96 409.46 0.720001 -9 re
f
92.16 389.66 m
/N3049 12.0059 Tf
(etc\205)
[5.33997 3.34717 5.33997 12.0154 ] pdfxs
n
81.9 400.46 0.720001 -13.5 re
f
n
441.96 400.46 0.720001 -13.5 re
f
92.16 379.7 m
/N138 9 Tf
(lambda\(1\) dGf   sum\(dGf\)    dGr   sum\(dGr\)    <dG> )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 386.96 0.720001 -9 re
f
n
441.96 386.96 0.720001 -9 re
f
92.16 370.7 m
(---------------------------------------------------)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 377.96 0.720001 -9 re
f
n
441.96 377.96 0.720001 -9 re
f
92.16 361.7 m
(  0.00     0.00     0.00    -5.71  -284.20     0.00 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 368.96 0.720001 -9 re
f
n
441.96 368.96 0.720001 -9 re
f
92.16 352.7 m
(  0.01     5.64     5.64    -5.54  -278.49     5.67 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 359.96 0.720001 -9 re
f
n
441.96 359.96 0.720001 -9 re
f
92.16 343.7 m
(  0.02     5.63    11.27    -5.45  -272.95    11.26 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 350.96 0.720001 -9 re
f
n
441.96 350.96 0.720001 -9 re
f
92.16 334.7 m
(  0.03     5.48    16.74    -5.28  -267.50    16.72 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 341.96 0.720001 -9 re
f
n
441.96 341.96 0.720001 -9 re
f
92.16 325.7 m
(  0.04     5.38    22.12   -10.41  -262.22    22.05 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 332.96 0.720001 -9 re
f
n
441.96 332.96 0.720001 -9 re
f
92.16 316.7 m
(  0.06    10.37    32.49   -10.07  -251.80    32.44 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 323.96 0.720001 -9 re
f
n
441.96 323.96 0.720001 -9 re
f
92.16 304.16 m
/N3049 12.0059 Tf
(etc\205)
[5.33997 3.34717 5.33997 12.0154 ] pdfxs
n
81.9 314.96 0.720001 -13.5 re
f
n
441.96 314.96 0.720001 -13.5 re
f
92.16 294.2 m
/N138 9 Tf
(Min energy-gap is:   -292.238384870069)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 301.46 0.720001 -9 re
f
n
441.96 301.46 0.720001 -9 re
f
92.16 285.2 m
(Max energy-gap is:    330.166319351831)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 292.46 0.720001 -9 re
f
n
441.96 292.46 0.720001 -9 re
f
n
81.9 283.46 0.720001 -9 re
f
n
441.96 283.46 0.720001 -9 re
f
92.16 267.2 m
(Lambda1 Ibin Energy gap  dGa    dGb      dGg    # pts )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 274.46 0.720001 -9 re
f
n
441.96 274.46 0.720001 -9 re
f
92.16 258.2 m
(-----------------------------------------------------)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 265.46 0.720001 -9 re
f
n
441.96 265.46 0.720001 -9 re
f
92.16 249.2 m
( 0.00    1  -284.46   -31.28   247.20   -47.72     65 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 256.46 0.720001 -9 re
f
n
441.96 256.46 0.720001 -9 re
f
92.16 240.2 m
( 0.00    2  -268.90   -31.28   231.53   -48.50    200 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 247.46 0.720001 -9 re
f
n
441.96 247.46 0.720001 -9 re
f
92.16 231.2 m
( 0.00    3  -253.34   -31.28   216.31   -49.35    231 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 238.46 0.720001 -9 re
f
n
441.96 238.46 0.720001 -9 re
f
92.16 222.2 m
( 0.00    4  -237.78   -31.28   201.25   -50.31     88)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 229.46 0.720001 -9 re
f
n
441.96 229.46 0.720001 -9 re
f
92.16 213.2 m
( 0.01    2  -268.90   -31.40   231.23   -48.73     79 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 220.46 0.720001 -9 re
f
n
441.96 220.46 0.720001 -9 re
f
92.16 204.2 m
( 0.01    3  -253.34   -31.26   216.16   -49.42    303 )
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 211.46 0.720001 -9 re
f
n
441.96 211.46 0.720001 -9 re
f
97.56 195.2 m
(0) show
102.96 195.2 m
(.) show
108.36 195.2 m
(0) show
113.76 195.2 m
(1) show
140.76 195.2 m
(4) show
156.96 195.2 m
(-) show
162.36 195.2 m
(2) show
167.76 195.2 m
(3) show
173.16 195.2 m
(7) show
178.56 195.2 m
(.) show
183.96 195.2 m
(7) show
189.36 195.2 m
(8) show
210.96 195.2 m
(-) show
216.36 195.2 m
(3) show
221.76 195.2 m
(1) show
227.16 195.2 m
(.) show
232.56 195.2 m
(1) show
237.96 195.2 m
(3) show
259.56 195.2 m
(2) show
264.96 195.2 m
(0) show
270.36 195.2 m
(1) show
275.76 195.2 m
(.) show
281.16 195.2 m
(5) show
286.56 195.2 m
(9) show
308.16 195.2 m
(-) show
313.56 195.2 m
(5) show
318.96 195.2 m
(0) show
324.36 195.2 m
(.) show
329.76 195.2 m
(1) show
335.16 195.2 m
(4) show
362.16 195.2 m
(1) show
367.56 195.2 m
(8) show
372.96 195.2 m
(1) show
n
81.9 202.46 0.720001 -9 re
f
n
441.96 202.46 0.720001 -9 re
f
92.16 186.2 m
( 0.01    5  -222.22   -30.99   189.55   -51.00     25)
[5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 
5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 5.39992 ] pdfxs
n
81.9 193.46 0.720001 -9 re
f
n
441.96 193.46 0.720001 -9 re
f
92.16 173.66 m
/N3049 12.0059 Tf
(etc\205)
[5.33997 3.34717 5.33997 12.0154 ] pdfxs
n
81.9 170 0.720001 -0.720001 re
f
n
81.9 170 360.78 -0.720001 re
f
n
441.96 170 0.720001 -0.720001 re
f
n
81.9 184.46 0.720001 -14.46 re
f
n
441.96 184.46 0.720001 -14.46 re
f
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Courier
%%+ font TimesNewRoman
%%+ font TimesNewRoman,BoldItalic
%%EOF
